@using Portal.Models
@model ArticleWithPosition

@{
    ViewBag.Title = Model.ArticleInfo.Name;
    Person currentPerson = Portal.Models.ApplicationDbContext.Create().Users.Where( p => p.UserName == User.Identity.Name ).FirstOrDefault();
}

<div class="container-fluid">
    <div class="container article-wrap">
        <div class="blog-header">
            <h3 class="blog-title">@Html.ActionLink( Model.ArticleInfo.Blogs.First().Name, "blog", "blogs", new { @id = Model.ArticleInfo.Blogs.First().ID }, new { @class = "no-link-attributes" } )</h3>
        </div>
        <div class="article">
            <div class="article-header">
                <a class="author no-link-attributes" href=@Url.Action("person", "persons", new { @id = Model.ArticleInfo.Author.Id })>
                    <img class="img-circle" src=@Model.ArticleInfo.Author.Picture.URL />
                    @Model.ArticleInfo.Author.First_Name @Model.ArticleInfo.Author.Second_Name
                </a>
                <div class="date">@Model.ArticleInfo.Date_of_Creation</div>
                <div class="article-actions">
                    @if( User.Identity.IsAuthenticated ) {
                        if( Model.ArticleInfo.Dislikes_Authors.Where( p => p.UserName == User.Identity.Name ).FirstOrDefault() != null ) {
                            <div class="rating">
                                <div class="rating-plus" style="opacity: 0.4;cursor: default;" onClick="OnLikeClick('@Url.Action("LikeArticle", "Articles", new { @id = Model.ArticleInfo.ID })', '@Model.ArticleInfo.ID')" id=@("LikesCountOnClick" + Model.ArticleInfo.ID)>
                                    <img class="icon" src="~/images/icons/plusIcon.png" /><span id=@("LikesCount" + Model.ArticleInfo.ID)>@Model.ArticleInfo.Likes_Count</span>
                                </div>
                                <div class="rating-minus" style="opacity: 1;" onClick="OnDislikeClick('@Url.Action("DislikeArticle", "Articles", new { @id = Model.ArticleInfo.ID })', '@Model.ArticleInfo.ID')" id=@("DislikesCountOnClick" + Model.ArticleInfo.ID)>
                                    <img class="icon" src="~/images/icons/minusIcon.png" /><span id=@("DislikesCount" + Model.ArticleInfo.ID)>@Model.ArticleInfo.Dislikes_Count</span>
                                </div>
                            </div>
                        } else if( Model.ArticleInfo.Likes_Authors.Where( p => p.UserName == User.Identity.Name ).FirstOrDefault() != null ) {
                            <div class="rating">
                                <div class="rating-plus" style="opacity: 1;" onClick="OnLikeClick('@Url.Action("LikeArticle", "Articles", new { @id = Model.ArticleInfo.ID })', '@Model.ArticleInfo.ID')" id=@("LikesCountOnClick" + Model.ArticleInfo.ID)>
                                    <img class="icon" src="~/images/icons/plusIcon.png" /><span id=@("LikesCount" + Model.ArticleInfo.ID)>@Model.ArticleInfo.Likes_Count</span>
                                </div>
                                <div class="rating-minus" style="opacity: 0.4;cursor: default;" onClick="OnDislikeClick('@Url.Action("DislikeArticle", "Articles", new { @id = Model.ArticleInfo.ID })', '@Model.ArticleInfo.ID')" id=@("DislikesCountOnClick" + Model.ArticleInfo.ID)>
                                    <img class="icon" src="~/images/icons/minusIcon.png" /><span id=@("DislikesCount" + Model.ArticleInfo.ID)>@Model.ArticleInfo.Dislikes_Count</span>
                                </div>
                            </div>
                        } else {
                            <div class="rating">
                                <div class="rating-plus" onClick="OnLikeClick('@Url.Action("LikeArticle", "Articles", new { @id = Model.ArticleInfo.ID })', '@Model.ArticleInfo.ID')" id=@("LikesCountOnClick" + Model.ArticleInfo.ID)>
                                    <img class="icon" src="~/images/icons/plusIcon.png" /><span id=@("LikesCount" + Model.ArticleInfo.ID)>@Model.ArticleInfo.Likes_Count</span>
                                </div>
                                <div class="rating-minus" onClick="OnDislikeClick('@Url.Action("DislikeArticle", "Articles", new { @id = Model.ArticleInfo.ID })', '@Model.ArticleInfo.ID')" id=@("DislikesCountOnClick" + Model.ArticleInfo.ID)>
                                    <img class="icon" src="~/images/icons/minusIcon.png" /><span id=@("DislikesCount" + Model.ArticleInfo.ID)>@Model.ArticleInfo.Dislikes_Count</span>
                                </div>
                            </div>
                        }
                    } else {
                        <div class="rating">
                            <div class="rating-plus" style="opacity: 0.4;cursor: default;" id=@("LikesCountOnClick" + Model.ArticleInfo.ID)>
                                <img class="icon" src="~/images/icons/plusIcon.png" /><span id=@("LikesCount" + Model.ArticleInfo.ID)>@Model.ArticleInfo.Likes_Count</span>
                            </div>
                            <div class="rating-minus" style="opacity: 0.4;cursor: default;" id=@("DislikesCountOnClick" + Model.ArticleInfo.ID)>
                                <img class="icon" src="~/images/icons/minusIcon.png" /><span id=@("DislikesCount" + Model.ArticleInfo.ID)>@Model.ArticleInfo.Dislikes_Count</span>
                            </div>
                        </div>
                    }
                    @if( User.Identity.Name == Model.ArticleInfo.Author.UserName || User.IsInRole( "admin" ) ) {
                        <div class="article-settings dropdown">
                            <div class="article-settings-btn" data-toggle="dropdown"><img class="icon" src="~/images/icons/settingsIcon.png" />Действия</div>
                            <ul class="dropdown-menu article-settings-menu">
                                <li><img class="icon" src="/images/icons/settignsPointIcon.png" />@Html.ActionLink( "Удалить", "Delete", "Articles", new { @id = Model.ArticleInfo.ID, @articlePosition = Model.Position }, new { @class = "article-menu-item" } )</li>
                                <li><img class="icon" src="/images/icons/settignsPointIcon.png" />@Html.ActionLink( "Редактировать", "Edit", "Articles", new { @id = Model.ArticleInfo.ID }, new { @class = "article-menu-item" } )</li>
                            </ul>
                        </div>
                    }
                </div>
            </div>
            <h2>@Model.ArticleInfo.Name</h2>
            <p style="white-space:pre-wrap; word-wrap: break-word;">@Model.ArticleInfo.Text</p>
            <div class="documents">
                <p>
                    @foreach( Document doc in @Model.ArticleInfo.Documents ) {
                        <div class="document">
                            <img class="icon-attached" src="/images/icons/attached.png"/>
                            <a href="@doc.URL">@doc.Name</a>
                        </div>
                    }
                </p>
            </div>

        </div>

        @foreach( Portal.Models.Comment comment in Model.ArticleInfo.Comments ) {
            <div class="comment">
                <div class="comment-header">
                    <a class="author no-link-attributes" href=@Url.Action("person", "persons", new { @id = comment.Author.Id })>
                        <img class="img-circle" src=@comment.Author.Picture.URL />
                        @comment.Author.First_Name @comment.Author.Second_Name
                    </a>
                    <div class="date">написал @comment.Create_Time</div>
                    @if( User.Identity.Name == comment.Author.UserName || User.IsInRole( "admin" ) ) {
                        using( Html.BeginForm( "DeleteComment", "Articles", new { id = Model.ArticleInfo.ID, idComment = comment.ID }, FormMethod.Post ) ) {
                            <input class="btn delete-comment-button" type="submit" value="X" />
                        }
                    }
                </div>
                <p>@comment.Text</p>
            </div>
        }
        @if( User.Identity.IsAuthenticated ) {
            <div class="add-comment comment">
                <div class="comment-header">
                    <div class="author">
                        <img class="img-circle" src=@currentPerson.Picture.URL />
                        @currentPerson.First_Name @currentPerson.Second_Name
                    </div>
                </div>

                @using( Html.BeginForm( "AddComment", "Articles", new { id = Model.ArticleInfo.ID }, FormMethod.Post ) ) {
                    if( ViewBag.EmptyComment == true ) {
                        <input class="add-comment-input input-validation-error" type="text" placeholder="Оставьте комментарий..." name="comment" />
                        <span class="field-validation-error" data-valmsg-for="comment" data-valmsg-replace="true">Напишите непустой комментарий</span>
                    } else {
                        <input class="add-comment-input" type="text" placeholder="Оставьте комментарий..." name="comment" />
                    }
                    <input class="btn add-comment-button" type="submit" value="Отправить" />
                }
            </div>
        }
    </div>
</div>
