@model Portal.Models.Article
<div class="container-fluid">
    <div class="container article-wrap">
        <div class="article">
            <div class="article-header">
                <a class="author no-link-attributes" href=@Url.Action("person", "persons", new { @id = Model.Author.Id }) >
                    <img class="img-circle" src=@Model.Author.Picture.URL />
                    @Model.Author.First_Name @Model.Author.Second_Name
                </a>
                <div class="date">@Model.Date_of_Creation</div>
                <div class="article-actions">
                    <div class="rating">
                        <div class="rating-plus" onClick="OnLikeClick('@Url.Action("LikeArticle", "Articles", new { @id = Model.ID })', '@Model.ID')">
                            <img class="icon" src="~/images/icons/plusIcon.png" /><span id=@("LikesCount" + Model.ID)>@Model.Likes_Count</span>
                        </div>
                        <div class="rating-minus" onClick="OnDislikeClick('@Url.Action("DislikeArticle", "Articles", new { @id = Model.ID })', '@Model.ID')">
                            <img class="icon" src="~/images/icons/minusIcon.png" /><span id=@("DislikesCount" + Model.ID)>@Model.Dislikes_Count</span>
                        </div>
                    </div>
                    @if (User.Identity.Name == Model.Author.UserName || User.IsInRole("admin"))
                    {
                    <div class="article-settings dropdown">
                        <div class="article-settings-btn" data-toggle="dropdown"><img class="icon" src="~/images/icons/settingsIcon.png"/>Actions</div>
                        <ul class="dropdown-menu article-settings-menu">
                            <li><img class="icon" src="/images/icons/settignsPointIcon.png" />@Html.ActionLink("Delete", "Delete", "Articles", new { @id = Model.ID }, new { @class = "" })</li>
                            <li><img class="icon" src="/images/icons/settignsPointIcon.png" />@Html.ActionLink("Edit", "Edit", "Articles", new { @id = Model.ID }, new { @class = "" })</li>
                        </ul>
                    </div>
                    }
                </div>
            </div>
            <h2>@Model.Name</h2>
            <p>@Model.Text</p>
        </div>
        
        @foreach (Portal.Models.Comment comment in Model.Comments) {
            <div class="comment">
                <div class="comment-header">
                    <a class="author no-link-attributes" href=@Url.Action("person", "persons", new { @id = comment.Author.Id }) >
                        <img class="img-circle" src=@comment.Author.Picture.URL />
                        @comment.Author.First_Name @comment.Author.Second_Name
                    </a>
                    <div class="date">commented on @comment.Create_Time</div>
                </div>
                <p>@comment.Text</p>
            </div>
        }

        <div class="add-comment comment">
            <div class="comment-header">
                <div class="author">
                    <img class="img-circle" src=@Portal.Models.ApplicationDbContext.Create().Person.Where(p => p.UserName == User.Identity.Name).FirstOrDefault().Picture.URL />
                    @User.Identity.Name
                </div>
            </div>

            @using (Html.BeginForm("AddComment", "Articles", new { id = Model.ID }, FormMethod.Post))
            {
                <input class="add-comment-input" type="text" placeholder="Leave your comment..." name="comment"/>
                <input class="btn add-comment-button" type="submit" value="Send"/>
            }
        </div>
    </div>
</div>
